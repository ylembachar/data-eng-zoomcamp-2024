# Ignore files and directories generated by IDEs
.vscode/
.idea/

# Ignore OS-specific files
.DS_Store
Thumbs.db

# Ignore build and compiled files
node_modules/
dist/
build/
*.log

# Ignore environment-specific files
.env
.env.local

# Ignore dependencies
package-lock.json
yarn.lock

# Ignore local configuration files
*.config.local.js

# Ignore sensitive information
*.secret
*.key

# Ignore temporary files
*.tmp
*.bak

# Ignore generated documentation
doc/

# Ignore test-specific files
__tests__/

# Ignore coverage reports
coverage/

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
